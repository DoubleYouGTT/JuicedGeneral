% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JuicedDateTime.R
\name{findperiodoverlapping}
\alias{findperiodoverlapping}
\title{Find overlapping periods}
\usage{
findperiodoverlapping(
  inputstartdates,
  inputenddates,
  checkstartdates = NULL,
  checkenddates = NULL,
  returnfirstonly = FALSE
)
}
\arguments{
\item{inputstartdates}{A vector of \code{POSIXct} datetimes representing start dates.}

\item{inputenddates}{A vector of \code{POSIXct} datetimes representing end dates.}

\item{checkstartdates}{A vector of \code{POSIXct} datetimes representing start dates that need to be checked.
Default=\code{NULL}, which assumes the \code{inputstartdates} to be checked.}

\item{checkenddates}{A vector of \code{POSIXct} datetimes representing end dates that need to be checked.
Default=\code{NULL}, which assumes the \code{inputenddates} to be checked.}

\item{returnfirstonly}{Set to \code{TRUE} if only the first found overlapping period needs to be returned.
Default=\code{FALSE} which returns all overlapping periods found.}
}
\value{
A list of integer indices per element of \code{inputxxxdates} representing the indices of
\code{checkxxxdates} the input overlaps with. For example, \code{inputstartdates="2020-10-10 12:30"}
and \code{inputenddates="2020-11-01 15:30"} overlaps with \code{checkstartdates="2020-10-20 15:45"}
and \code{checkenddates="2020-12-12 13:30"}. It will return a list of indices of the \code{checkstartdates}
variable if this is true. If \code{returnfirstonly=TRUE}, it only returns the first index of that list per element.
}
\description{
For a vector of start and end \code{POSIXct} datetimes, find where that time period is overlapping
within another start and end vector.
}
\seealso{
Other date and time functions: 
\code{\link{addisoinfo}()},
\code{\link{findperiodcontained}()},
\code{\link{makeconsistentdateformat}()},
\code{\link{makeconsistentdatetimeformat}()},
\code{\link{makedatecolumns}()},
\code{\link{makedatetimecolumns}()},
\code{\link{removeisoinfo}()},
\code{\link{seqdays}()}
}
\concept{date and time functions}
